/*
 * Jon Larsen
 * 17 Nov 16
 * Displays a tutorial for using the Adapt Intent Parser from the Mycroft AI to
 * generate a JSON object and pass it into Node.js
 */

var intro = "Have you ever seen the characters on 'Star Trek' talk to their computer,"
    + " or Grace Gummer's character <a href='https://www.youtube.com/watch?v=TaY9zt_qx_c'>talk to "
//    + " or <a href='http://www.imdb.com/name/nm3501146/?ref_=tt_cl_t7'> Grace Gummer's </a>"
    + "her Amazon Alexa</a> in 'Mr Robot', and thought 'I wanna "
    + "program that AI!' ? With the <a href='https://mycroft.ai/'>Mycrotf AI</a>"
    + " this is easier than you might have thought.<br><br>"
    + "One piece of the Mycroft AI is the <a href='https://adapt.mycroft.ai/'>"
    + "Adapt Intent Parser</a>. This is the part of the system that figures out"
    + " the parts of the command it's given, and turns that into a "
    + "<a href='https://json.org'>JSON</a> object that is made up of a bunch of "
    + "key-value pairs, and can then be passed to other programs.<br><br>"
    + "In this tutorial we'll briefly cover using Adapt, and then talk "
    + "about how to use the result in  Javascript.<br><br>"

var install = "First install the Python package manager, "
    + "<a href='https://pip.pypa.io/en/stable/installing/'>pip</a>, if you don't"
    + " have it already (it's included with the newer versions of Python). "
    + " Then <a href='https://adapt.mycroft.ai/start/installation'> install the "
    + "Adapt Intent Parser</a>.<br>"
    + "<br>Some notes:<br>"
    + "<br>1. They recommend using a virtualenv. This is a way to ensure software "
    + "updates don't break your program. If this is not a concern, of you don't"
    + " want to mess with it, it's okay not to use iti for now.<br>"
    + "<br>2. After installing Adapt the command they give to test it is<br>"
    + "<pre><code class='hljs bash'>"
    + "$ PYTHONPATH=. python examples/multi_intent_parser.py 'play some music by the clash'"
    + "</code></pre>"
    + "You might get an error from this, depending on what versions of "
    + "Python you have installed and how your system is configured. On my system "
    + "I resolved the error by running Python 3, changing the line to"
    + "<pre><code class='hljs bash'>"
    + "$ PYTHONPATH=. python3 examples/multi_intent_parser.py 'play some music by the clash'"
    + "</code></pre>";

var python = "Now go through the <a href='https://adapt.mycroft.ai/start/tutorial'>"
    + "tutorial</a> provided by Adapt. Beyond the boiler-plate code to instantiate"
    + " the parser engine, just remember"
    + " the basic steps of the process, using their \"play some music by the clash"
    + "\" example: <ol>"
    + "<li>Create an array of keywords all related to the same action. [play, "
    + "listen, hear] "
    + "<li>Register the keyword with the engine. Use a loop for multiple keywords."
    + "<li>Create an array of terms that are a query parameter. [third eye blind, "
    + "the who, the clash]"
    + "<li>Register each of those words with the engine."
    + "<li>Repeat steps 3 & 4 as needed. [songs, music] was the extra query "
    + "parameter used in the tutorial."
    + "<li>Create an instance of the \"intent\" using the IntentBuilder function"
    + "<li>Register the intent with the engine."
    + "<li>Repeat all steps above if you want different kinds of actions possible"
    + " - like one possible action being getting a weather forecast, and another"
    + " possible action being to play music."
    +  "</ol>";

var node = "Now that we have the JSON object with all sorts of categories "
    + "that we can check with if/else and switch statements, how do we get that "
    + "\"JavaScript Object Notation\" object actually INTO javascript so we can"
    + " use it in web applications? The solution lies in the \"child_process\" "
    + "module.<br><br>"
    + "The child_process module allows Node to run another program. Additionally "
    + "it allows you to send the outputs from the child program directly back "
    + "to your javascript program.<br><br>"
    + "The first step is to go back to your python script and make sure you "
    + "have the line"
    + "<pre><code class='hljs py'>import sys</code></pre>"
    + "which you should have anyways from the Adapt tutorial. Next, although I "
    + "got my test program working without it, add a command to flush the buffer "
    + "after printing out the intent, making your code look more like"
    + "<pre><code class='hljs py'>"
    + "for intent in engine.determine_intent(' '.join(sys.argv[1:])):\n"
    + "    \#a confidence > 0 means it is valid\n"
    + "    if intent.get('confidence') > 0:\n"
    + "        #print it to stdout\n"
    + "        print(json.dumps(intent, indent=4))\n"
    + "        sys.stdout.flush()"
    + " </code></pre>"
    + "For the javascript itself, we will create a function that will spawn the"
    + " child process, parse the output, and return the JSON object. First we need"
    + "<pre><code class='hljs js'>"
    + "function getJson()\n"
    + "{\n"  
    + "    var myChild = require('child_process')"
    + "</code></pre>"
    + "The child_process module has <a href='https://nodejs.org/api/child_process.html'>"
    + "several functions</a>, and the one we'll use here is spawnSync, which is"
    + " synchronous, which in turn makes things simple for the purpose of this  tutorial."
    + " We will pass it the command we want it to execute, python3 in my case, "
    + "along with the various command line arguments we want to pass to the child "
    + "process - in this case the name of the python script (we'll use \"myScript.py\"), "
    + "and a variable for the query."
    + "<pre><code class='hljs js'>"
    + "    var myQuery = \"what's the weather in San Francisco?\";\n"
    + "    var myChildObj = myChild.spawnSync('python3', [\"myScript.py\", myQuery]);"
    + "</code></pre>"
    + "Note: I had some issues getting this to work initially. Turns out the "
    + "version of Node I had installed was quite old, so I kept getting an error "
    + "stating that the spawnSync line was \"undefined\". If you need to, "
    + "<a href='https://nodejs.org/en/download/package-manager/'>install the "
    + "latest version of Node</a>.<br>"
    + "<br>The next step is to create a JSON object that is the parsed data that the "
    + "child process sent to stdout, then return that object."
    + "<pre><code class='hljs js'>"
    + "    var myParsedObj = JSON.parse(myChildObj.stdout);\n"
    + "    return myParsedObj;\n"
    + "}"
    + "</code></pre>"
    + "Now we can call that function"
    + "<pre><code class='hljs js'>"
    + "var myJSONObj = getJson();"
    + "</code></pre>"
    + "And use it like any JSON object"
    + "<pre class='hljs js'><code>"
    + "console.log(\"intent_type: \" + myJSONObj.intent_type);\n"
    + "console.log(\"are you sure?: \" + myJSONObj.confidence);\n\n"
    + "if (myJSONObj.intent_type == \"WeatherIntent\")\n"
    + "    console.log(\"Yup, definitely the weather\");\n"
    + "else\n"
    + "    console.log(\"Nope, it's something else\");"
    + "</code></pre>";

var next = "As previously menioned, you can use this method to parse a string "
    + "into an object made up of key-value pairs, and have your program do "
    + "different things depending on the contents of those pairs."
    + "<br><br>Also, you can look at the other <a href='https://mycroft.ai/projects/'>"
    + "pieces of the Mycroft project</a>, such as <a href='https://mimic.mycroft.ai/'>"
    + "Mimic Speech to Text</a> and <a href='https://openstt.org/'>Open Text to "
    + "Speech</a> and incorporate those into your program";

function tutorial(){
    document.getElementById("intro").innerHTML = intro;
    document.getElementById("install").innerHTML = install;
    document.getElementById("python").innerHTML = python;
    document.getElementById("node").innerHTML = node;
    document.getElementById("next").innerHTML = next;
}
